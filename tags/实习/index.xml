<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>实习 on Madiks&#39;s blog</title>
    <link>https://madiks.github.io/tags/%E5%AE%9E%E4%B9%A0/</link>
    <description>Recent content in 实习 on Madiks&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 22 Mar 2014 21:12:41 +0800</lastBuildDate>
    <atom:link href="https://madiks.github.io/tags/%E5%AE%9E%E4%B9%A0/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>我在创业团队实习收获</title>
      <link>https://madiks.github.io/post/internship-at-startups/</link>
      <pubDate>Sat, 22 Mar 2014 21:12:41 +0800</pubDate>
      
      <guid>https://madiks.github.io/post/internship-at-startups/</guid>
      <description>

&lt;h3 id=&#34;我在创业团队实习收获&#34;&gt;我在创业团队实习收获&lt;/h3&gt;

&lt;p&gt;去年12月到今年3月初在一本地软件公司进行PHP实习，分到该公司的创业部门。为什么说是创业部门呢，原来该公司主要从事政府部门的软件、网站的设计，可能是老总想要发展新的赢利点吧，于是公司就成立了一个创业部门发展新业务，选择的方向也是前端时间比较热门的微信公众平台的开发。&lt;/p&gt;

&lt;p&gt;我刚进入该部门的时候，这个项目已经开始了大约一个月，然后直到今年三月初的项目失败以后博主就离开了这家公司，期间经历了比较多的事，有很多的收获。先感谢这家公司给我的实习机会，下面就开始列一列我的实习感受和一些总结，写的比较乱没有什么章法，有对有错，大家凑合看吧。&lt;/p&gt;

&lt;h5 id=&#34;产品方面&#34;&gt;产品方面：&lt;/h5&gt;

&lt;p&gt;1.创业期间产品线不能太广，要把握核心业务，迅速建立核心业务原型，让基础（核心）业务良好运行之后再慢慢的“做加法”，在初期一定要把有限的资源用在最需要的地方。&lt;/p&gt;

&lt;p&gt;2.不要随意切换项目，要把当前的项目完成或者彻底放弃&lt;/p&gt;

&lt;p&gt;3.所谓创业团队(尤其是小规模创业团队)就是一定要目标明确、单一、可执行。&lt;/p&gt;

&lt;p&gt;这就是博主离开的原因，在这个项目失败以后，我们部门又在寻找新的项目，从本地服务门户到社交、团购、问答都考虑了一遍，后来大体确定要做一个覆盖大量用户的以话题为中心的大型社交型本地社区，我也理解的不是很明白，所以表达的也不是很明白。我觉得太靠谱就选择了离开，总之祝他们好运，能够成功。&lt;/p&gt;

&lt;h5 id=&#34;团队方面&#34;&gt;团队方面:&lt;/h5&gt;

&lt;p&gt;4.创业团队人员结构要合理，要有核心成员，团队要精简，每一个人都有用武之地&lt;/p&gt;

&lt;p&gt;5.不空谈理想，畅想未来，或者团队文化，太假大空的东西会让人觉得不靠谱&lt;/p&gt;

&lt;p&gt;6.在项目开发的初期，大量进行人员调整是大忌，会直接引起团队内情绪低落，对项目失去信心。所以不管是主动离职还是辞退都要尽量避免，一旦发生这种情况，要及时说明做好团队成员的心理工作。更好的方法是在团队建立的时候吸纳人员的时候，严格把控，从而避免这种情况。&lt;/p&gt;

&lt;h5 id=&#34;编码方面&#34;&gt;编码方面：&lt;/h5&gt;

&lt;p&gt;7.一定要有注释，哪怕比较简单的结构也要留下必要的注释&lt;/p&gt;

&lt;p&gt;以前我不太相信自己写的代码自己能读不懂，在这个项目的时候我是真遇到了，一个月前我写的代码可我就是不认识它，这个后悔啊，当时我哪怕留下一句注释都好啊。唉说多了都是泪，积累经验了。(这段其实是自己的问题，自己的代码自己不认识不是因为没加注释而是因为自己没懂，只是粗略的写完而没有去理清自己的思路加上代码的可读性差所以会造成这种情况，跟加不加注释关系不大，有良好风格的代码本身就能起到注释的作用。)
8.设计稍微复杂的功能模块一定要在纸上建立业务流程和逻辑顺序，切记想到哪写到哪，这样可能会留下一些莫名其妙的bug&lt;/p&gt;

&lt;p&gt;这个也有体会，当时让我写的一个小模块出了些莫名其妙的bug，我去检查的时候读我写的代码，发现逻辑极其混乱，毫无章法再加上没留注释，完全搞不明白自己当时想干啥，后来直接删掉重写了，太坑了。&lt;/p&gt;

&lt;h5 id=&#34;做项目-学习-方面&#34;&gt;做项目（学习）方面：&lt;/h5&gt;

&lt;p&gt;9.把握程序的核心结构和功能来学习，掌握核心的东西，每一个项目都要总结收获&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>