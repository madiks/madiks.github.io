<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dev on Madiks&#39;s blog</title>
    <link>https://madiks.github.io/tags/dev/</link>
    <description>Recent content in Dev on Madiks&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>All rights reserved.&lt;br&gt;Powered by [Hugo](//gohugo.io/) with the [Type Theme](//github.com/digitalcraftsman/hugo-type-theme)</copyright>
    <lastBuildDate>Wed, 27 Sep 2017 21:22:14 +0800</lastBuildDate>
    
	<atom:link href="https://madiks.github.io/tags/dev/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>从零搭建LNMP开发环境</title>
      <link>https://madiks.github.io/post/build-vagrant-lnmp-sde/</link>
      <pubDate>Wed, 27 Sep 2017 21:22:14 +0800</pubDate>
      
      <guid>https://madiks.github.io/post/build-vagrant-lnmp-sde/</guid>
      <description>在Mac从零搭建PHP7开发环境，由于我不想直接在本地环境下直接操作所以使用Vagrant+VirtualBox在虚拟机来搭建开发环境，这样可以不用考虑开发环境各种配置对于本机的影响。
关于Vagrant可以参考这两篇文章：为什么要使用Vagrant和Vagrant使用简介我就不多做解释了。
如果你不想自己手动搭建整个环境可以直接使用Laravel Homestead，这是由Laravel框架开发者提供的一个已搭建好的跨平台（Windows、 Mac、 Linux）的PHP开发环境，内置了如Nginx、PHP7、 MySQL、 Postgres、 Redis、 Memcached、 Node等服务，只需在Vagrant下载入box文件做到了开箱即用。
绕了半天还是回归正题，从零搭建PHP7开发环境：
初始化虚拟环境 这里假设你已经在本机安装好了VirtualBox+Vagrant，进入自己的想要存放环境的目录并在终端下执行如下命令：
mkdir trusty64 &amp;amp;&amp;amp; cd trusty64 # 创建并进入存放虚拟机的目录 vagrant init ubuntu/trusty64 # 使用Vagrant载入Ubuntu 14.04的box文件  上面的命令会从外网下载Ubuntu 14.04的box文件，所以会比较慢，需要耐心等待。执行成功后编辑trusty64目录下的Vagrantfile配置文件来修改一些虚拟机的配置。
由于网络原因box文件的下载可能出错，所以我这里提供我已下载的Vagrant Ubuntu 14.04 Box文件给大家，可以直接在trusty64目录下使用如下命令载入:
vagrant box add phpdev ubuntu-trusty64-20170831.box vagrant init  调整虚拟机配置 我习惯将配置文件中config.vm.box_check_update = true修改为config.vm.box_check_update = false，这样每次启动虚拟机就不会检查box文件是否有更新了。
Vagrant 默认是使用端口映射方式将虚拟机的端口映射本地从而实现类似 http://localhost:80 这种访问方式，我更喜欢以固定IP的方式访问虚拟机，修改配置：
config.vm.network :private_network, ip: &amp;quot;192.168.99.64&amp;quot;  这样启动虚拟机后我们就能用 192.168.99.64 访问这台机器了，你可以把IP改成其他地址，只要冲突就行。
默认Vagrant是把当前目录即trusty64映射到虚拟机的/vagrant目录下，你可以改变这个配置：
config.vm.synced_folder &#39;.&#39;, &#39;/vagrant&#39;, disabled: true config.vm.synced_folder &amp;quot;./PHPCode&amp;quot; , &amp;quot;/code&amp;quot;, :mount_options =&amp;gt; [&amp;quot;dmode=777&amp;quot;, &amp;quot;fmode=666&amp;quot;]  上面第一行关闭默认的目录映射，第二行将当前目录下的PHPCode映射到虚拟机的/code目录下。</description>
    </item>
    
  </channel>
</rss>